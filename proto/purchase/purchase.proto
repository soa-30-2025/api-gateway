syntax = "proto3";

package purchase;

option go_package = "proto/purchase";

import "google/api/annotations.proto";

service PurchaseService {
  rpc AddToCart(AddToCartRequest) returns (AddToCartResponse) {
        option (google.api.http) = {
            post: "/api/purchase/{user_id}/cart"
            body: "*"
        };
    }

    rpc RemoveFromCart(RemoveFromCartRequest) returns (RemoveFromCartResponse) {
        option (google.api.http) = {
            delete: "/api/purchase/{user_id}/cart/{tour_id}"
        };
    }

    rpc GetCart(GetCartRequest) returns (GetCartResponse) {
        option (google.api.http) = {
            get: "/api/purchase/{user_id}/cart"
        };
    }

    rpc Checkout(CheckoutRequest) returns (CheckoutResponse) {
        option (google.api.http) = {
            post: "/api/purchase/{user_id}/checkout"
            body: "*"
        };
    }

    rpc HasPurchased(HasPurchasedRequest) returns (HasPurchasedResponse) {
        option (google.api.http) = {
            get: "/api/purchase/{user_id}/purchased/{tour_id}"
        };
    }

    rpc GetPurchases(GetPurchasesRequest) returns (GetPurchasesResponse) {
        option (google.api.http) = {
            get: "/api/purchase/{user_id}/purchases"
        };
    }
}

message AddToCartRequest {
  string user_id = 1;
  string tour_id = 2;
  string tour_name = 3;
  double price = 4;
}

message AddToCartResponse {
  bool ok = 1;
  double total = 2;
}

message RemoveFromCartRequest {
  string user_id = 1;
  string tour_id = 2;
}

message RemoveFromCartResponse {
  bool ok = 1;
  double total = 2;
}

message GetCartRequest {
  string user_id = 1;
}

message CartItem {
  string tour_id = 1;
  string tour_name = 2;
  double price = 3;
  string created_at = 4;
}

message GetCartResponse {
  repeated CartItem items = 1;
  double total = 2;
}

message CheckoutRequest {
  string user_id = 1;
}

message PurchaseToken {
  string tour_id = 1;
  string token = 2;
  double price = 3;
}

message CheckoutResponse {
  bool success = 1;
  repeated PurchaseToken tokens = 2;
  double total = 3;
  string purchase_id = 4;
  string message = 5;
}

message HasPurchasedRequest {
  string user_id = 1;
  string tour_id = 2;
}

message HasPurchasedResponse {
  bool purchased = 1;
  string token = 2;
}

message GetPurchasesRequest {
  string user_id = 1;
}

message PurchaseInfo {
  string purchase_id = 1;
  string tour_id = 2;
  string token = 3;
  double price = 4;
  string created_at = 5;
}

message GetPurchasesResponse {
  repeated PurchaseInfo purchases = 1;
}
