syntax = "proto3";

package stakeholder;

option go_package = "proto/stakeholder";

import "google/api/annotations.proto";

service Stakeholder {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/users"
      body: "*"
    };
  }

  rpc GetByID(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/users/{id}"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/api/users/{id}"
      body: "*"
    };
  }

  rpc GetAll(GetAllRequest) returns (GetAllResponse) {
    option (google.api.http) = {
      get: "/api/users"
    };
  }

  rpc BlockUser(BlockUserRequest) returns (BlockUserResponse) {
    option (google.api.http) = {
      patch: "/api/users/{id}/block"
      body: "*"
    };
  }
}

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string role = 4;
  bool blocked = 5;
  string first_name = 6;
  string last_name = 7;
  string profile_image = 8;
  string bio = 9;
  string motto = 10;
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string role = 4;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string profile_image = 4;
  string bio = 5;
  string motto = 6;
}

message UpdateUserResponse {
  User user = 1;
}

message BlockUserRequest {
  string id = 1;
  bool block = 2; // true = block, false = unblock
}

message BlockUserResponse {
  User user = 1;
}

message GetAllRequest {}

message GetAllResponse {
  repeated User users = 1;
}
