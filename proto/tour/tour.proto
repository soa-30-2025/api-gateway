syntax = "proto3";

package tour;
option go_package = "proto/tour";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

message Tour {
  string id = 1;
  string author_id = 2;
  string name = 3;
  string description = 4;
  string difficulty = 5;
  repeated string tags = 6;
  double price = 7;
  double length_km = 8;
  string status = 9;
  map<string,int32> travel_times = 10;
  google.protobuf.Timestamp created_at = 11;
  string updated_at = 12;
  string published_at = 13;
  string archived_at = 14;
}

message Keypoint {
  string id = 1;
  string tour_id = 2;
  int32 order = 3;
  string name = 4;
  string description = 5;
  double lat = 6;
  double lon = 7;
  string image_path = 8;
  string created_at = 9;
  string updated_at = 10;
}

message Review {
  string id = 1;
  string tour_id = 2;
  string tourist_id = 3;
  int32 rating = 4;
  string comment = 5;
  google.protobuf.Timestamp visit_date = 6;
  repeated string image_urls = 7; 
  google.protobuf.Timestamp created_at = 8;
}

message TourExecution {
  string id = 1;
  string tour_id = 2;
  string tourist_id = 3;
  string status = 4; 
  repeated CompletedKeyPoint completed_key_points = 5;
  google.protobuf.Timestamp start_time = 6;
  google.protobuf.Timestamp end_time = 7;
  google.protobuf.Timestamp last_activity = 8;
  double lat = 9;
  double lng = 10;
}

message CompletedKeyPoint {
  string key_point_id = 1;  
  google.protobuf.Timestamp completed_time = 2;  
}

message StartTourRequest {
  string tour_id = 1;
}

message StartTourResponse {
  TourExecution execution = 1;
}

message UpdateTourExecutionRequest {
  string execution_id = 1;
  string status = 2; 
  double lat = 3;
  double lng = 4;
}

message UpdateTourExecutionResponse {
  TourExecution execution = 1;
}

message CheckKeypointProximityRequest {
  string execution_id = 1;
}

message CheckKeypointProximityResponse {
  bool is_near_keypoint = 1;
}

message CreateTourRequest {
    string name = 1;
    string description = 2;
    string difficulty = 3;
    repeated string tags = 4;
    map<string,int32> travel_times = 5;
}

message CreateTourResponse {
    Tour tour = 1;
}

message GetToursByAuthorRequest {
  string author_id = 1;
}

message GetToursByAuthorResponse {
  repeated Tour tours = 1;
}

message GetTourRequest { string id = 1; }
message GetTourResponse { Tour tour = 1; repeated Keypoint keypoints = 2; }

message GetAllToursRequest {}

message GetAllToursResponse {
  repeated Tour tours = 1;
}

message CreateReviewRequest {
  string tour_id = 1;
  int32 rating = 2;
  string comment = 3;
  google.protobuf.Timestamp visit_date = 4;
  repeated Image images = 5;
}

message Image {
  bytes data = 1;
  string filename = 2;
  string content_type = 3;
}

message CreateReviewResponse {
  Review review = 1;
}

message GetReviewsByTourRequest { 
  string tourId = 1; 
} 

message GetReviewsByTourResponse { 
  repeated Review reviews = 1; 
}

message UpdateTourRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string difficulty = 4;
  repeated string tags = 5;
  map<string,int32> travel_times = 6;
  double length_km = 7;
  string status = 8;
}
message UpdateTourResponse { Tour tour = 1; }

message AddKeypointRequest {
  string tour_id = 1;
  int32 order = 2;
  string name = 3;
  string description = 4;
  double lat = 5;
  double lon = 6;
  bytes image = 7; // optional raw bytes
  string image_filename = 8; // optional
  string image_content_type = 9; // optional
}
message AddKeypointResponse { Keypoint keypoint = 1; }
message GetKeypointImageRequest { string keypoint_id = 1; }
message ImageChunk { bytes data = 1; }


message ReorderKeypointsRequest {
  string tour_id = 1;
  repeated string ordered_ids = 2;
}

message ReorderKeypointsResponse {
  bool ok = 1;
}

message UpdateKeypointRequest {
  string keypoint_id = 1;
  string name = 2;
  string description = 3;
  double lat = 4;
  double lon = 5;
}

message UpdateKeypointResponse {
  Keypoint keypoint = 1;
}

message DeleteKeypointRequest {
  string keypoint_id = 1;
}

message DeleteKeypointResponse {
  bool ok = 1;
}

message GetCompletionStatusRequest {
  string execution_id = 1;
}

message GetCompletionStatusResponse {
  int32 completed_keypoints = 1;
  int32 total_keypoints = 2;
  bool all_completed = 3;
  string progress = 4;
}

service TourService {
    rpc CreateTour(CreateTourRequest) returns (CreateTourResponse) {
        option (google.api.http) = {
        post: "/api/tour"
        body: "*"
        };
    }

    rpc GetToursByAuthor(GetToursByAuthorRequest) returns (GetToursByAuthorResponse) {
        option (google.api.http) = {
        get: "/api/tours/{author_id}"
        };
    }

    rpc GetTour(GetTourRequest) returns (GetTourResponse) {
        option (google.api.http) = {
        get: "/api/tour/{id}"
        };
    }

    rpc GetAllTours(GetAllToursRequest) returns (GetAllToursResponse) {
        option (google.api.http) = {
        get: "/api/tours"
        };
    }

    rpc CreateReview(CreateReviewRequest) returns (CreateReviewResponse) {
        option (google.api.http) = {
        post: "/api/review"
        body: "*"
        };
    }
    
    rpc UpdateTour(UpdateTourRequest) returns (UpdateTourResponse) {
        option (google.api.http) = {
        put: "/api/tour/{id}"
        body: "*"
        };
    }

    rpc GetReviewsByTour(GetReviewsByTourRequest) returns (GetReviewsByTourResponse) {
        option (google.api.http) = {
        get: "/api/reviews/{tourId}"
        };
    }
    rpc AddKeypoint(AddKeypointRequest) returns (AddKeypointResponse) {
        option (google.api.http) = {
        post: "/api/tour/{tour_id}/keypoints"
        body: "*"
        };
    }

    rpc GetKeypointImage(GetKeypointImageRequest) returns (stream ImageChunk) {
        option (google.api.http) = {
        get: "/api/keypoints/{keypoint_id}/image"
        };
    }

    rpc ReorderKeypoints(ReorderKeypointsRequest) returns (ReorderKeypointsResponse) {
      option (google.api.http) = {
        post: "/api/tours/{tour_id}/keypoints/reorder"
        body: "*"
      };
    }

    rpc UpdateKeypoint(UpdateKeypointRequest) returns (UpdateKeypointResponse) {
      option (google.api.http) = {
        put: "/api/keypoints/{keypoint_id}"
        body: "*"
      };
    }

    rpc DeleteKeypoint(DeleteKeypointRequest) returns (DeleteKeypointResponse) {
      option (google.api.http) = {
        delete: "/api/keypoints/{keypoint_id}"
      };
    }

    rpc StartTour(StartTourRequest) returns (StartTourResponse) {
      option (google.api.http) = {
        post: "/api/tour-execution"
        body: "*"
      };
    }

    rpc UpdateTourExecution(UpdateTourExecutionRequest) returns (UpdateTourExecutionResponse) {
      option (google.api.http) = {
        put: "/api/tour-execution/{execution_id}"
        body: "*"
      };
    }

    rpc CheckKeypointProximity(CheckKeypointProximityRequest) returns (CheckKeypointProximityResponse) {
      option (google.api.http) = {
        get: "/api/tour-execution/{execution_id}/check-proximity"
      };
    }

    rpc GetCompletionStatus(GetCompletionStatusRequest) returns (GetCompletionStatusResponse) {
      option (google.api.http) = {
        get: "/api/tour-execution/{execution_id}/completion-status"
      };
    }
}
